"""
Django settings for project production.



this is conviguration production

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

from .base import *

import os


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get('DB_NAME', ''),
        'USER': os.environ.get('DB_USER', ''),
        'PASSWORD': os.environ.get('DB_PASSWORD', ''),
        'HOST': os.environ.get('DB_HOST', ''),
        'PORT': os.environ.get('DB_PORT', ''),
    }
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://{}:6379/1".format(os.environ.get('REDIS_HOST', '')),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        "KEY_PREFIX": "example"
    }
}

if os.environ.get('DEBUG', 'False') == 'True':
    DEBUG = True
else:
    DEBUG = False

BROKER_KAFKA = os.environ.get('BROKER_KAFKA', '')
TOPIC_KAFKA = os.environ.get('TOPIC_KAFKA', '')


CONFLUENT_KAFKA_PRODUCER = {"bootstrap.servers": BROKER_KAFKA,
                            "retries": "5"}
KAFKA_PRODUCER = Producer(CONFLUENT_KAFKA_PRODUCER)

ASSET_ROOT = os.path.join(os.path.dirname(BASE_DIR), "project/assets")

PORT = 7051

ENV = 'production'

print("PRODUCTION")


REDIS_HOST = os.environ.get('REDIS_HOST', '')
REDIS_PASSWORD = None

STATIC_URL = os.environ.get('STATIC_HOST', '')+'/static/'
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static")
STATICFILES_DIRS = [
    #os.path.join(os.path.dirname(os.path.dirname(BASE_DIR)), "/static"),
    os.path.join(BASE_DIR, "static"),
    #os.path.join(BASE_DIR, "/www/static")
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        #'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework_filters.backends.DjangoFilterBackend',
    ),
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '5/minute',
        'user': '5/minute',
        'gateway': '{}/minute'.format(os.environ.get('RATE_LIMIT', '100'))
    }
}